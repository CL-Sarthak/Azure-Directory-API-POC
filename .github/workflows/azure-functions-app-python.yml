name: Deploy FastAPI (Docker) to Azure Web App

on:
  push:
    branches: ["main"] # change if your default branch differs

concurrency:
  group: deploy-<<<your-webapp-name>>>
  cancel-in-progress: true

env:
  WEBAPP_NAME: <<<your-webapp-name>>>                 # Azure Web App (Linux, Docker)
  IMAGE_BASENAME: ghcr.io/<<<owner>>>/<<<repo>>>      # GHCR repo (owner/repo)

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write         # push to GHCR
      id-token: write

    steps:
      - name: üßæ Checkout
        uses: actions/checkout@v4

      - name: ‚öôÔ∏è Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: üèóÔ∏è Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üîê Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: üì¶ Build and push image (latest + SHA)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_BASENAME }}:latest
            ${{ env.IMAGE_BASENAME }}:${{ github.sha }}

      # Azure pulls the exact SHA tag ‚Üí guarantees fresh deploy every push
      - name: üöÄ Deploy container image to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          images: ${{ env.IMAGE_BASENAME }}:${{ github.sha }}

      # Optional warm-up check (use your app's public URL)
      # - name: üîé Smoke test
      #   run: |
      #     set -e
      #     URL="https://<<<your-webapp-name>>>.azurewebsites.net/api/graph/diag"
      #     for i in {1..10}; do
      #       echo "Attempt $i: $URL"
      #       if curl -fsS "$URL" >/dev/null; then
      #         echo "OK"
      #         exit 0
      #       fi
      #       sleep 6
      #     done
      #     echo "Site did not respond in time"
      #     exit 1
