# üî¥ REMINDER: Replace all <<< >>> placeholders before you merge to main
# Required replacements:
# - <<<your-webapp-name>>> : Azure Web App (Linux, Docker) name (e.g., lt-graph-webhook)
# - <<<owner>>>            : GitHub org/user for GHCR (e.g., cirruslabs)
# - <<<repo>>>             : Repository name (e.g., Azure-Directory-API-POC)
#
# Required secrets in GitHub:
# - secrets.AZURE_WEBAPP_PUBLISH_PROFILE  # Azure Web App publish profile XML (Download from Azure Portal)
#
# Azure Web App settings (set in Azure Portal ‚Üí Configuration ‚Üí Application settings):
# - CLIENT_STATE = b2a6f37e-3d49-4b28-87d9-ccf2af95e4a2   # üîê your shared secret (DON'T put this in GitHub)
# - WEBSITES_PORT = 8000                                   # required for Linux containers on App Service
# - (optional) WEBSITES_CONTAINER_START_TIME_LIMIT = 300   # if cold starts take longer
#
# If your GHCR image is PRIVATE, configure registry credentials in Azure Web App (Deployment Center) OR
# make the GHCR package PUBLIC (Settings ‚Üí Packages ‚Üí your image ‚Üí change visibility).
#
# This workflow builds a Docker image, pushes to GHCR, then tells Azure Web App to pull that image.

name: Deploy FastAPI (Docker) to Azure Web App

on:
  push:
    branches: ["main"]   # <<< change if your default branch is not 'main'

# üîÅ Prevent overlapping deploys to the same app
concurrency:
  group: deploy-<<<your-webapp-name>>>
  cancel-in-progress: true

env:
  WEBAPP_NAME: <<<your-webapp-name>>>                # <<< Azure Web App name
  IMAGE_NAME: ghcr.io/<<<owner>>>/<<<repo>>>:latest  # <<< GHCR image tag (owner/repo must match your repo)

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write          # needed to push to GHCR
      id-token: write          # future-proof if you switch to OIDC auth

    steps:
      - name: üßæ Checkout
        uses: actions/checkout@v4

      - name: ‚öôÔ∏è Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: üèóÔ∏è Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üîê Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: üì¶ Build and push image to GHCR
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile        # <<< change if your Dockerfile has a different path/name
          push: true
          tags: ${{ env.IMAGE_NAME }}

      # üî¥ Ensure Azure Web App has:
      #   - CLIENT_STATE app setting set to b2a6f37e-3d49-4b28-87d9-ccf2af95e4a2
      #   - WEBSITES_PORT app setting set to 8000
      #   - (If GHCR image is PRIVATE) registry credentials configured in Azure

      - name: üöÄ Deploy container image to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.WEBAPP_NAME }}                         # <<< your app name
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}  # <<< repo secret
          images: ${{ env.IMAGE_NAME }}                            # points to GHCR image tag above
